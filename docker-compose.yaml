services:
  database:
    image: esus_database:1.0.0
    build: database
    ports:
      - "5434:5432" # host:container
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-esus}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-esus}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-7}
      - S3_BUCKET=${S3_BUCKET:-}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_ENDPOINT_URL=${AWS_ENDPOINT_URL:-}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ${BACKUP_DIR:-./backups}:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-esus}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    restart: unless-stopped

  webserver:
    image: esus_webserver:5.2.31
    build:
      context: webserver
      args:
        - URL_DOWNLOAD_ESUS=${URL_DOWNLOAD_ESUS:-https://arquivos.esusab.ufsc.br/PEC/1af9b7ee9c3886bd/5.3.21/eSUS-AB-PEC-5.3.21-Linux64.jar}
    ports:  # ✅ CORRETO - no mesmo nível de build
      - "8089:8080" # host:container
    environment:
      - APP_DB_URL=jdbc:postgresql://database:5432/${POSTGRES_DB:-esus}
      - APP_DB_USER=${POSTGRES_USER:-postgres}
      - APP_DB_PASSWORD=${POSTGRES_PASSWORD:-esus}
      - ESUS_TRAINING_MODE=${ESUS_TRAINING_MODE:-false}
    expose:
      - "8080"
    labels: {}  # Adicione labels se necessário, ou remova essa linha
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: 30s
      retries: 5
      start_period: 120s
      timeout: 10s
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
